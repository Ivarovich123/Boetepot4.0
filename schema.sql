-- Drop existing tables if they exist
drop table if exists fines;
drop table if exists players;
drop table if exists reasons;

-- Create players table
create table players (
    id bigint generated by default as identity primary key,
    name text not null unique,
    created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Create reasons table
create table reasons (
    id bigint generated by default as identity primary key,
    description text not null unique,
    created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Create fines table
create table fines (
    id bigint generated by default as identity primary key,
    player_id bigint references players(id) on delete restrict not null,
    reason_id bigint references reasons(id) on delete restrict not null,
    amount decimal(10,2) not null check (amount > 0),
    date timestamp with time zone default timezone('utc'::text, now()) not null,
    created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Create indexes for better performance
create index fines_player_id_idx on fines(player_id);
create index fines_reason_id_idx on fines(reason_id);
create index fines_date_idx on fines(date desc);

-- Create view for recent fines
create or replace view recent_fines as
select 
    f.id,
    f.amount,
    f.date,
    p.name as player_name,
    r.description as reason_description
from fines f
inner join players p on p.id = f.player_id
inner join reasons r on r.id = f.reason_id
order by f.date desc
limit 10;

-- Create view for player totals
create or replace view player_totals as
select 
    p.id as player_id,
    p.name as player_name,
    coalesce(sum(f.amount), 0) as total_amount
from players p
left join fines f on f.player_id = p.id
group by p.id, p.name
order by total_amount desc; 